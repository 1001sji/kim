<?php
if (!defined('_GNUBOARD_')) exit; // Do not allow direct access

/**
 * Gets the thumbnail URL for a given post.
 * Checks for attached image files first, then for images in the post content.
 *
 * @param array $write_row The write data array from Gnuboard.
 * @param string $bo_table The board table ID.
 * @return string The URL of the thumbnail, or an empty string if not found.
 */
if (!function_exists('get_api_thumbnail_url')) {
    function get_api_thumbnail_url($write_row, $bo_table) {
        // Check for a thumbnail generated by Gnuboard's thumbnail function first
        $thumb = get_list_thumbnail($bo_table, $write_row['wr_id'], 200, 200);
        if (isset($thumb['src']) && $thumb['src']) {
            return $thumb['src'];
        }

        // Fallback to checking attached files
        $file = get_file($bo_table, $write_row['wr_id']);
        if (is_array($file)) {
            for ($i=0; $i<count($file); $i++) {
                if (isset($file[$i]['view']) && $file[$i]['view']) {
                    // Return a full URL
                    return str_replace(G5_PATH, G5_URL, $file[$i]['path']).'/'.$file[$i]['file'];
                }
            }
        }

        // If no file thumbnail, fallback to checking for an image in the content
        $matches = get_editor_image($write_row['wr_content']);
        if (isset($matches[1]) && $matches[1]) {
             return $matches[1];
        }

        return ''; // No thumbnail found
    }
}

/**
 * Gets a list of files attached to a given post.
 *
 * @param int $wr_id The write ID of the post.
 * @param string $bo_table The board table ID.
 * @return array A list of file information arrays.
 */
if (!function_exists('get_api_file_list')) {
    function get_api_file_list($wr_id, $bo_table) {
        global $g5;
        $files = array();
        $board_file = get_file($bo_table, $wr_id);
        if (is_array($board_file)) {
            for ($i=0; $i<count($board_file); $i++) {
                $files[] = array(
                    'href' => $board_file[$i]['href'],
                    'source' => $board_file[$i]['source'],
                    'size' => $board_file[$i]['size'],
                    'download' => $board_file[$i]['download'],
                    'content' => $board_file[$i]['content'],
                    // Construct a direct download link for the API
                    'download_url' => G5_BBS_URL.'/download.php?bo_table='.$bo_table.'&wr_id='.$wr_id.'&no='.$i,
                );
            }
        }
        return $files;
    }
}
?>
