<?php
// gnuboard-skin-mcp-server.php
require_once __DIR__ . '/vendor/autoload.php';
require_once __DIR__ . '/common.php';

use PhpMcp\Server\Server;
use PhpMcp\Server\Transports\StdioServerTransport;
use PhpMcp\Server\Attributes\{McpTool, McpResource, McpPrompt};

class GnuboardSkinDeveloper
{
    /**
     * 게시판 스킨 목록 조회
     */
    #[McpTool(name: 'list_board_skins')]
    public function listBoardSkins(): array
    {
        global $g5;
        $skin_path = G5_SKIN_PATH . '/board';
        $skins = [];
        
        $handle = opendir($skin_path);
        while ($file = readdir($handle)) {
            if ($file == "." || $file == "..") continue;
            if (is_dir($skin_path.'/'.$file)) {
                $skins[] = [
                    'name' => $file,
                    'path' => $skin_path.'/'.$file,
                    'files' => $this->getSkinFiles($skin_path.'/'.$file)
                ];
            }
        }
        closedir($handle);
        
        return ['skins' => $skins];
    }
    
    /**
     * 스킨 파일 읽기
     */
    #[McpTool(name: 'read_skin_file')]
    public function readSkinFile(string $skin_type, string $skin_name, string $file_name): array
    {
        global $g5;
        
        $base_path = ($skin_type === 'board') ? G5_SKIN_PATH . '/board' : G5_SKIN_PATH . '/member';
        $file_path = $base_path . '/' . $skin_name . '/' . $file_name;
        
        if (!file_exists($file_path)) {
            return ['error' => '파일을 찾을 수 없습니다.'];
        }
        
        return [
            'content' => file_get_contents($file_path),
            'path' => $file_path,
            'type' => pathinfo($file_path, PATHINFO_EXTENSION)
        ];
    }
    
    /**
     * 스킨 파일 저장
     */
    #[McpTool(name: 'save_skin_file')]
    public function saveSkinFile(
        string $skin_type, 
        string $skin_name, 
        string $file_name, 
        string $content
    ): array {
        global $g5;
        
        $base_path = ($skin_type === 'board') ? G5_SKIN_PATH . '/board' : G5_SKIN_PATH . '/member';
        $file_path = $base_path . '/' . $skin_name . '/' . $file_name;
        
        // 백업 생성
        if (file_exists($file_path)) {
            $backup_path = $file_path . '.backup.' . date('YmdHis');
            copy($file_path, $backup_path);
        }
        
        $result = file_put_contents($file_path, $content);
        
        return [
            'success' => $result !== false,
            'path' => $file_path,
            'backup' => isset($backup_path) ? $backup_path : null
        ];
    }
    
    /**
     * 새 스킨 생성 (기본 템플릿 포함)
     */
    #[McpTool(name: 'create_board_skin')]
    public function createBoardSkin(string $skin_name, string $base_skin = 'basic'): array
    {
        global $g5;
        
        $new_skin_path = G5_SKIN_PATH . '/board/' . $skin_name;
        
        if (is_dir($new_skin_path)) {
            return ['error' => '이미 존재하는 스킨입니다.'];
        }
        
        // 디렉토리 생성
        mkdir($new_skin_path, 0755, true);
        
        // 기본 파일들 생성
        $default_files = [
            'list.skin.php' => $this->getListTemplate($skin_name),
            'view.skin.php' => $this->getViewTemplate($skin_name),
            'write.skin.php' => $this->getWriteTemplate($skin_name),
            'style.css' => $this->getDefaultCSS($skin_name),
            'img/' => null // 이미지 디렉토리
        ];
        
        foreach ($default_files as $file => $content) {
            if (substr($file, -1) === '/') {
                mkdir($new_skin_path . '/' . $file, 0755);
            } else {
                file_put_contents($new_skin_path . '/' . $file, $content);
            }
        }
        
        return [
            'success' => true,
            'skin_name' => $skin_name,
            'path' => $new_skin_path,
            'files' => array_keys($default_files)
        ];
    }
    
    /**
     * 스킨에서 사용 가능한 변수 목록
     */
    #[McpTool(name: 'get_skin_variables')]
    public function getSkinVariables(string $skin_type, string $file_type): array
    {
        $variables = [
            'board' => [
                'list' => [
                    '$board' => '게시판 설정 정보',
                    '$list' => '게시글 목록 배열',
                    '$write_href' => '글쓰기 링크',
                    '$is_checkbox' => '체크박스 표시 여부',
                    '$total_count' => '전체 게시글 수',
                    '$page' => '현재 페이지',
                    '$total_page' => '전체 페이지 수'
                ],
                'view' => [
                    '$view' => '게시글 정보',
                    '$board' => '게시판 설정',
                    '$is_admin' => '관리자 여부',
                    '$member' => '현재 로그인 회원 정보',
                    '$prev_href' => '이전글 링크',
                    '$next_href' => '다음글 링크'
                ],
                'write' => [
                    '$board' => '게시판 설정',
                    '$write' => '수정시 기존 게시글 정보',
                    '$w' => '작업 구분 (w: 쓰기, u: 수정)',
                    '$is_member' => '회원 여부',
                    '$is_admin' => '관리자 여부'
                ]
            ]
        ];
        
        return $variables[$skin_type][$file_type] ?? [];
    }
    
    /**
     * 반응형 스킨 템플릿 생성
     */
    #[McpPrompt(name: 'responsive_skin_template')]
    public function responsiveSkinPrompt(string $skin_name, string $design_style): array
    {
        return [
            [
                'role' => 'user',
                'content' => "그누보드 게시판 스킨 '{$skin_name}'을 위한 {$design_style} 스타일의 반응형 list.skin.php 템플릿을 만들어주세요. 
                다음 요구사항을 포함해주세요:
                - Bootstrap 5 또는 Tailwind CSS 활용
                - 모바일 우선 설계
                - 다크모드 지원
                - 애니메이션 효과
                - 접근성 고려 (ARIA 속성)
                - SEO 최적화"
            ]
        ];
    }
    
    /**
     * CSS 프레임워크별 스킨 변환
     */
    #[McpTool(name: 'convert_skin_framework')]
    public function convertSkinFramework(
        string $skin_name,
        string $from_framework,
        string $to_framework
    ): array {
        // 스킨의 HTML 클래스를 다른 프레임워크로 변환
        $conversions = [
            'bootstrap_to_tailwind' => [
                'btn btn-primary' => 'bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded',
                'table table-striped' => 'min-w-full divide-y divide-gray-200',
                'form-control' => 'shadow appearance-none border rounded w-full py-2 px-3',
                'row' => 'flex flex-wrap -mx-4',
                'col-md-6' => 'w-full md:w-1/2 px-4'
            ]
        ];
        
        // 실제 변환 로직...
        return ['status' => 'conversion_ready', 'from' => $from_framework, 'to' => $to_framework];
    }
    
    // 헬퍼 메서드들
    private function getSkinFiles($path): array
    {
        $files = [];
        $handle = opendir($path);
        while ($file = readdir($handle)) {
            if ($file == "." || $file == "..") continue;
            if (is_file($path.'/'.$file)) {
                $files[] = $file;
            }
        }
        closedir($handle);
        return $files;
    }
    
    private function getListTemplate($skin_name): string
    {
        return <<<PHP
<?php
if (!defined('_GNUBOARD_')) exit; // 개별 페이지 접근 불가

// 스킨 경로
\$board_skin_url = get_board_skin_url(\$bo_table);

// 추가 CSS
add_stylesheet('<link rel="stylesheet" href="'.\$board_skin_url.'/style.css">', 0);
?>

<div class="{$skin_name}-board-list">
    <!-- 카테고리 -->
    <?php if (\$is_category) { ?>
    <nav class="board-category">
        <?php echo \$category_option ?>
    </nav>
    <?php } ?>
    
    <!-- 게시글 목록 -->
    <div class="board-list-wrap">
        <?php for (\$i=0; \$i<count(\$list); \$i++) { ?>
        <article class="board-item">
            <h3 class="board-title">
                <a href="<?php echo \$list[\$i]['href'] ?>">
                    <?php echo \$list[\$i]['subject'] ?>
                </a>
            </h3>
            <div class="board-meta">
                <span class="author"><?php echo \$list[\$i]['name'] ?></span>
                <span class="date"><?php echo \$list[\$i]['datetime2'] ?></span>
                <span class="hit">조회 <?php echo \$list[\$i]['wr_hit'] ?></span>
            </div>
        </article>
        <?php } ?>
    </div>
    
    <!-- 페이징 -->
    <?php echo \$write_pages; ?>
</div>
PHP;
    }
    
    private function getViewTemplate($skin_name): string
    {
        return <<<PHP
<?php
if (!defined('_GNUBOARD_')) exit; // 개별 페이지 접근 불가

// 스킨 경로
\$board_skin_url = get_board_skin_url(\$bo_table);

// 추가 CSS
add_stylesheet('<link rel="stylesheet" href="'.\$board_skin_url.'/style.css">', 0);
?>

<article class="{$skin_name}-board-view">
    <header class="view-header">
        <h1><?php echo cut_str(get_text(\$view['wr_subject']), 70); ?></h1>
        <div class="view-info">
            <span class="author"><?php echo \$view['name'] ?></span>
            <span class="date"><?php echo date("Y-m-d H:i", strtotime(\$view['wr_datetime'])) ?></span>
            <span class="hit">조회 <?php echo number_format(\$view['wr_hit']) ?></span>
        </div>
    </header>
    
    <div class="view-content">
        <?php echo get_view_thumbnail(\$view); ?>
        <?php echo \$view['content']; ?>
    </div>
    
    <footer class="view-footer">
        <div class="view-buttons">
            <?php if (\$update_href) { ?><a href="<?php echo \$update_href ?>" class="btn btn-modify">수정</a><?php } ?>
            <?php if (\$delete_href) { ?><a href="<?php echo \$delete_href ?>" class="btn btn-delete">삭제</a><?php } ?>
            <a href="<?php echo \$list_href ?>" class="btn btn-list">목록</a>
        </div>
    </footer>
</article>
PHP;
    }
    
    private function getWriteTemplate($skin_name): string
    {
        return <<<PHP
<?php
if (!defined('_GNUBOARD_')) exit; // 개별 페이지 접근 불가

// 스킨 경로
\$board_skin_url = get_board_skin_url(\$bo_table);

// 추가 CSS
add_stylesheet('<link rel="stylesheet" href="'.\$board_skin_url.'/style.css">', 0);
?>

<section class="{$skin_name}-board-write">
    <h2 class="sound_only"><?php echo \$g5['title'] ?></h2>
    
    <form name="fwrite" id="fwrite" action="<?php echo \$action_url ?>" method="post" enctype="multipart/form-data">
    <input type="hidden" name="uid" value="<?php echo get_uniqid(); ?>">
    <input type="hidden" name="w" value="<?php echo \$w ?>">
    <input type="hidden" name="bo_table" value="<?php echo \$bo_table ?>">
    <input type="hidden" name="wr_id" value="<?php echo \$wr_id ?>">
    
    <div class="write-form">
        <div class="form-group">
            <label for="wr_subject">제목</label>
            <input type="text" name="wr_subject" value="<?php echo \$subject ?>" id="wr_subject" required class="form-control" maxlength="255">
        </div>
        
        <div class="form-group">
            <label for="wr_content">내용</label>
            <?php echo \$editor_html; ?>
        </div>
    </div>
    
    <div class="write-buttons">
        <button type="submit" class="btn btn-primary">작성완료</button>
        <a href="./board.php?bo_table=<?php echo \$bo_table ?>" class="btn btn-cancel">취소</a>
    </div>
    </form>
</section>
PHP;
    }
    
    private function getDefaultCSS($skin_name): string
    {
        return <<<CSS
/* {$skin_name} 스킨 스타일 */

.{$skin_name}-board-list {
    margin: 20px 0;
}

.board-item {
    padding: 20px;
    border-bottom: 1px solid #e5e5e5;
    transition: background-color 0.3s ease;
}

.board-item:hover {
    background-color: #f8f9fa;
}

.board-title {
    margin: 0 0 10px;
    font-size: 18px;
}

.board-title a {
    color: #333;
    text-decoration: none;
}

.board-meta {
    font-size: 14px;
    color: #666;
}

.board-meta span {
    margin-right: 15px;
}

/* 반응형 스타일 */
@media (max-width: 768px) {
    .board-item {
        padding: 15px;
    }
    
    .board-title {
        font-size: 16px;
    }
    
    .board-meta {
        font-size: 12px;
    }
}

/* 다크모드 지원 */
@media (prefers-color-scheme: dark) {
    .{$skin_name}-board-list {
        background-color: #1a1a1a;
        color: #e5e5e5;
    }
    
    .board-item {
        border-color: #333;
    }
    
    .board-item:hover {
        background-color: #2a2a2a;
    }
    
    .board-title a {
        color: #e5e5e5;
    }
}
CSS;
    }
}

// 서버 실행
try {
    $server = Server::make()
        ->withServerInfo('그누보드 스킨 개발 도우미', '1.0.0')
        ->build();
    
    $server->discover(__DIR__, ['src']);
    
    $transport = new StdioServerTransport();
    $server->listen($transport);
    
} catch (\Throwable $e) {
    fwrite(STDERR, "[ERROR] " . $e->getMessage() . "\n");
    exit(1);
}